<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- 1. 数据源 : DriverManagerDataSource -->
	
	 <!--引入数据库配置信息 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:db.properties" />
    </bean>
	
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"><!-- 此种class没有连接池功能 -->
		<property name="driverClassName" value="${mysql.db.driverClassName}" />
		<property name="url" value="${mysql.db.url}"/>
<!-- 		<property name="url" value="jdbc:mysql://localhost:3306/frame?useUnicode=true&amp;characterEncoding=utf-8"/> -->
		<property name="username" value="${mysql.db.username}" />
		<property name="password" value="${mysql.db.password}" />
	</bean>

	<!-- 配置Mybatis的文件 ，mapperLocations配置**Mapper.xml文件位置，不用再在mybatis配置文件中添加注册映射文件了，configLocation配置mybatis文件位置-->  
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="mapperLocations" value="classpath*:com/ssm/sqlmapping/*.xml"/>    
        <property name="configLocation" value="classpath:mybatis.xml" />  
    </bean>  
    
    <!-- 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置Mpper的映射了，只要Mapper接口类和Mapper映射文件对应起来就可以了。 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.ssm.dao" />  
         <property name="sqlSessionFactoryBeanName" value="sessionFactory" />
    </bean>  

	<!-- 4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 5. 使用声明式事务 transaction-manager：引用上面定义的事务管理器 -->
	<tx:annotation-driven transaction-manager="txManager" />

</beans>