<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>ssm</display-name>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<!-- 加载Spring容器配置 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 设置Spring容器加载所有的配置文件的路径 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<!-- 配置SpringMVC核心控制器 -->
	<servlet>
		<servlet-name>springMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
		<!-- 启动加载一次 -->
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- 为DispatcherServlet建立映射 -->
	<servlet-mapping>
		<servlet-name>springMVC</servlet-name>
		<!-- *.do避免了静态文件（jpg,js,css）被拦截，/拦截所有，导致静态文件（jpg,js,css）被拦截，页面上的图片和引入的css等无效，可用绝对路径 -->
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	    <!-- 自定义拦截器 -->
	<mvc:interceptors>
	    <mvc:interceptor>
		   	<!-- 用户认证拦截 -->
		   	<mvc:mapping path="/**"/>
		   	<bean class="com.ssm.interceptor.LoginInterceptor"></bean>
	    </mvc:interceptor>
	   <!--  <mvc:interceptor>
	    	资源拦截
	    	<mvc:mapping path="/**"/>
	    	<bean class="com.ssm.interceptor.PermissionInterceptor"></bean>
	    </mvc:interceptor> -->
	</mvc:interceptors>
	<!-- 配置静态资源的路径，不配置的话，controller返回原来页面依然加载不了文件，因为也被springmvc拦截，配置下面意思就是这些请求不被拦截 -->
	 
	<!-- 最好用taglib公共文件，设置baseurl采用绝对路径，这样什么都不用配置，即使springmvc拦截也能加载 -->
	 

	<!-- 方案 -->
	<!-- <mvc:default-servlet-handler /> -->
	  
	<!-- 方案二 -->
 	<mvc:resources mapping="/image/**" location="/image" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/js/**" location="/js/" /> 



	<!-- 防止Spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- 解决工程编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 未知url都会转到登陆页面 -->
	<error-page>
    	<error-code>404</error-code>
    	<location>/jsp/login.jsp</location>
	</error-page>

</web-app>